{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst AUTH_API = 'http://localhost:8080/api/auth/';\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nclass AuthService {\n  constructor(http) {\n    this.http = http;\n  }\n  login(username, password) {\n    return this.http.post(AUTH_API + 'signin', {\n      username,\n      password\n    }, httpOptions);\n  }\n  register(username, email, password) {\n    return this.http.post(AUTH_API + 'signup', {\n      username,\n      email,\n      password\n    }, httpOptions);\n  }\n  logout() {\n    return this.http.post(AUTH_API + 'signout', {}, httpOptions);\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});\nexport { AuthService };","map":{"version":3,"names":["HttpHeaders","AUTH_API","httpOptions","headers","AuthService","constructor","http","login","username","password","post","register","email","logout","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\seanc\\OneDrive\\Documents\\Centennial diploma\\Sem3\\COMP229\\Week4\\Client\\src\\app\\_service\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\n \n\nconst AUTH_API = 'http://localhost:8080/api/auth/';\n\n \n\nconst httpOptions = {\n\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n\n};\n\n \n\n@Injectable({\n\n  providedIn: 'root',\n\n})\n\nexport class AuthService {\n\n  constructor(private http: HttpClient) { }\n\n \n\n  login(username: string, password: string): Observable<any> {\n\n    return this.http.post(\n\n      AUTH_API + 'signin',\n\n      {\n\n        username,\n\n        password,\n\n      },\n\n      httpOptions\n\n    );\n\n  }\n\n \n\n  register(username: string, email: string, password: string): Observable<any> {\n\n    return this.http.post(\n\n      AUTH_API + 'signup',\n\n      {\n\n        username,\n\n        email,\n\n        password,\n\n      },\n\n      httpOptions\n\n    );\n\n  }\n\n \n\n  logout(): Observable<any> {\n\n    return this.http.post(AUTH_API + 'signout', {}, httpOptions);\n\n  }\n\n}"],"mappings":"AAEA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAM9D,MAAMC,QAAQ,GAAG,iCAAiC;AAIlD,MAAMC,WAAW,GAAG;EAElBC,OAAO,EAAE,IAAIH,WAAW,CAAC;IAAE,cAAc,EAAE;EAAkB,CAAE;CAEhE;AAID,MAMaI,WAAW;EAEtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAgB;EAIxCC,KAAKA,CAACC,QAAgB,EAAEC,QAAgB;IAEtC,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAEnBT,QAAQ,GAAG,QAAQ,EAEnB;MAEEO,QAAQ;MAERC;KAED,EAEDP,WAAW,CAEZ;EAEH;EAIAS,QAAQA,CAACH,QAAgB,EAAEI,KAAa,EAAEH,QAAgB;IAExD,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAEnBT,QAAQ,GAAG,QAAQ,EAEnB;MAEEO,QAAQ;MAERI,KAAK;MAELH;KAED,EAEDP,WAAW,CAEZ;EAEH;EAIAW,MAAMA,CAAA;IAEJ,OAAO,IAAI,CAACP,IAAI,CAACI,IAAI,CAACT,QAAQ,GAAG,SAAS,EAAE,EAAE,EAAEC,WAAW,CAAC;EAE9D;;AAxDWE,WAAW,C;mBAAXA,WAAW,EAAAU,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAXb,WAAW,C;SAAXA,WAAW;EAAAc,OAAA,EAAXd,WAAW,CAAAe,IAAA;EAAAC,UAAA,EAJV;AAAM;SAIPhB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}