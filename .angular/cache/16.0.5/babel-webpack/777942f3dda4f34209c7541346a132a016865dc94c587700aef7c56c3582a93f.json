{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst API_URL = 'http://localhost:8080/api/test/';\nclass UserService {\n  constructor(http) {\n    this.http = http;\n  }\n  getPublicContent() {\n    return this.http.get(API_URL + 'all', {\n      responseType: 'text'\n    });\n  }\n  getUserBoard() {\n    return this.http.get(API_URL + 'user', {\n      responseType: 'text'\n    });\n  }\n  getModeratorBoard() {\n    return this.http.get(API_URL + 'mod', {\n      responseType: 'text'\n    });\n  }\n  getAdminBoard() {\n    return this.http.get(API_URL + 'admin', {\n      responseType: 'text'\n    });\n  }\n}\nUserService.ɵfac = function UserService_Factory(t) {\n  return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n};\nUserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserService,\n  factory: UserService.ɵfac,\n  providedIn: 'root'\n});\nexport { UserService };","map":{"version":3,"names":["API_URL","UserService","constructor","http","getPublicContent","get","responseType","getUserBoard","getModeratorBoard","getAdminBoard","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\seanc\\OneDrive\\Documents\\Centennial diploma\\Sem3\\COMP229\\Week4\\Client\\src\\app\\_services\\user.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\n \n\nconst API_URL = 'http://localhost:8080/api/test/';\n\n \n\n@Injectable({\n\n  providedIn: 'root',\n\n})\n\nexport class UserService {\n\n  constructor(private http: HttpClient) { }\n\n \n\n  getPublicContent(): Observable<any> {\n\n    return this.http.get(API_URL + 'all', { responseType: 'text' });\n\n  }\n\n \n\n  getUserBoard(): Observable<any> {\n\n    return this.http.get(API_URL + 'user', { responseType: 'text' });\n\n  }\n\n \n\n  getModeratorBoard(): Observable<any> {\n\n    return this.http.get(API_URL + 'mod', { responseType: 'text' });\n\n  }\n\n \n\n  getAdminBoard(): Observable<any> {\n\n    return this.http.get(API_URL + 'admin', { responseType: 'text' });\n\n  }\n\n}\n\n "],"mappings":";;AAQA,MAAMA,OAAO,GAAG,iCAAiC;AAIjD,MAMaC,WAAW;EAEtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAgB;EAIxCC,gBAAgBA,CAAA;IAEd,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAACL,OAAO,GAAG,KAAK,EAAE;MAAEM,YAAY,EAAE;IAAM,CAAE,CAAC;EAEjE;EAIAC,YAAYA,CAAA;IAEV,OAAO,IAAI,CAACJ,IAAI,CAACE,GAAG,CAACL,OAAO,GAAG,MAAM,EAAE;MAAEM,YAAY,EAAE;IAAM,CAAE,CAAC;EAElE;EAIAE,iBAAiBA,CAAA;IAEf,OAAO,IAAI,CAACL,IAAI,CAACE,GAAG,CAACL,OAAO,GAAG,KAAK,EAAE;MAAEM,YAAY,EAAE;IAAM,CAAE,CAAC;EAEjE;EAIAG,aAAaA,CAAA;IAEX,OAAO,IAAI,CAACN,IAAI,CAACE,GAAG,CAACL,OAAO,GAAG,OAAO,EAAE;MAAEM,YAAY,EAAE;IAAM,CAAE,CAAC;EAEnE;;AAlCWL,WAAW,C;mBAAXA,WAAW,EAAAS,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAXZ,WAAW,C;SAAXA,WAAW;EAAAa,OAAA,EAAXb,WAAW,CAAAc,IAAA;EAAAC,UAAA,EAJV;AAAM;SAIPf,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}