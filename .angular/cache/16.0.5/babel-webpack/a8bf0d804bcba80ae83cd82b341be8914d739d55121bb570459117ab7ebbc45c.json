{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst baseUrl = 'http://localhost:8080/api/products';\nclass ProductService {\n  constructor(http) {\n    this.http = http;\n  }\n  getAll() {\n    return this.http.get(baseUrl);\n  }\n  get(id) {\n    return this.http.get(`${baseUrl}/${id}`);\n  }\n  create(data) {\n    return this.http.post(baseUrl, data);\n  }\n  update(id, data) {\n    return this.http.put(`${baseUrl}/${id}`, data);\n  }\n  delete(id) {\n    return this.http.delete(`${baseUrl}/${id}`);\n  }\n  deleteAll() {\n    return this.http.delete(baseUrl);\n  }\n  findByName(name) {\n    return this.http.get(`${baseUrl}?name=${name}`);\n  }\n}\nProductService.ɵfac = function ProductService_Factory(t) {\n  return new (t || ProductService)(i0.ɵɵinject(i1.HttpClient));\n};\nProductService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ProductService,\n  factory: ProductService.ɵfac,\n  providedIn: 'root'\n});\nexport { ProductService };","map":{"version":3,"names":["baseUrl","ProductService","constructor","http","getAll","get","id","create","data","post","update","put","delete","deleteAll","findByName","name","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\seanc\\OneDrive\\Documents\\Centennial diploma\\Sem3\\COMP229\\Week4\\client\\src\\app\\services\\product.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Product } from '../models/product.model';\nconst baseUrl = 'http://localhost:8080/api/products';\n@Injectable({\nprovidedIn: 'root'\n})\nexport class ProductService {\nconstructor(private http: HttpClient) { }\ngetAll(): Observable<Product[]> {\nreturn this.http.get<Product[]>(baseUrl);\n}\nget(id: any): Observable<Product> {\nreturn this.http.get(`${baseUrl}/${id}`);\n}\ncreate(data: any): Observable<any> {\nreturn this.http.post(baseUrl, data);\n}\nupdate(id: any, data: any): Observable<any> {\nreturn this.http.put(`${baseUrl}/${id}`, data);\n}\ndelete(id: any): Observable<any> {\nreturn this.http.delete(`${baseUrl}/${id}`);\n}\ndeleteAll(): Observable<any> {\nreturn this.http.delete(baseUrl);\n}\nfindByName(name: any): Observable<Product[]> {\nreturn this.http.get<Product[]>(`${baseUrl}?name=${name}`);\n}\n}"],"mappings":";;AAIA,MAAMA,OAAO,GAAG,oCAAoC;AACpD,MAGaC,cAAc;EAC3BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAgB;EACxCC,MAAMA,CAAA;IACN,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAYL,OAAO,CAAC;EACxC;EACAK,GAAGA,CAACC,EAAO;IACX,OAAO,IAAI,CAACH,IAAI,CAACE,GAAG,CAAC,GAAGL,OAAO,IAAIM,EAAE,EAAE,CAAC;EACxC;EACAC,MAAMA,CAACC,IAAS;IAChB,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAACT,OAAO,EAAEQ,IAAI,CAAC;EACpC;EACAE,MAAMA,CAACJ,EAAO,EAAEE,IAAS;IACzB,OAAO,IAAI,CAACL,IAAI,CAACQ,GAAG,CAAC,GAAGX,OAAO,IAAIM,EAAE,EAAE,EAAEE,IAAI,CAAC;EAC9C;EACAI,MAAMA,CAACN,EAAO;IACd,OAAO,IAAI,CAACH,IAAI,CAACS,MAAM,CAAC,GAAGZ,OAAO,IAAIM,EAAE,EAAE,CAAC;EAC3C;EACAO,SAASA,CAAA;IACT,OAAO,IAAI,CAACV,IAAI,CAACS,MAAM,CAACZ,OAAO,CAAC;EAChC;EACAc,UAAUA,CAACC,IAAS;IACpB,OAAO,IAAI,CAACZ,IAAI,CAACE,GAAG,CAAY,GAAGL,OAAO,SAASe,IAAI,EAAE,CAAC;EAC1D;;AAtBad,cAAc,C;mBAAdA,cAAc,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAdlB,cAAc,C;SAAdA,cAAc;EAAAmB,OAAA,EAAdnB,cAAc,CAAAoB,IAAA;EAAAC,UAAA,EAFf;AAAM;SAELrB,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}